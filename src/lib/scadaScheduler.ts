import cron, { ScheduledTask } from 'node-cron';
import { scadaService } from './scadaService';

let scheduledTask: ScheduledTask | null = null;
let intervalId: NodeJS.Timeout | null = null;

// Ch·∫°y c·∫≠p nh·∫≠t d·ªØ li·ªáu m·ªói 5 gi√¢y
export function startScadaScheduler() {
    console.log('üöÄ Kh·ªüi ƒë·ªông SCADA data scheduler');
    
    // Ch·∫°y l·∫ßn ƒë·∫ßu ngay l·∫≠p t·ª©c
    scadaService.updateAllScadaData().catch(error => {
        console.error(`[${new Date().toISOString()}] ‚ùå L·ªói khi c·∫≠p nh·∫≠t d·ªØ li·ªáu SCADA:`, error);
    });

    // Sau ƒë√≥ ch·∫°y m·ªói 5 gi√¢y
    intervalId = setInterval(async () => {
        console.log(`\n[${new Date().toISOString()}] üîÑ B·∫Øt ƒë·∫ßu c·∫≠p nh·∫≠t d·ªØ li·ªáu SCADA`);
        
        try {
            await scadaService.updateAllScadaData();
            console.log(`[${new Date().toISOString()}] ‚úÖ Ho√†n th√†nh c·∫≠p nh·∫≠t d·ªØ li·ªáu SCADA`);
        } catch (error) {
            console.error(`[${new Date().toISOString()}] ‚ùå L·ªói khi c·∫≠p nh·∫≠t d·ªØ li·ªáu SCADA:`, error);
        }
    }, 5000); // 5 seconds
}

// Export h√†m d·ª´ng scheduler
export function stopScadaScheduler() {
    if (intervalId) {
        clearInterval(intervalId);
        intervalId = null;
        console.log('‚èπÔ∏è ƒê√£ d·ª´ng SCADA data scheduler');
    }
} 